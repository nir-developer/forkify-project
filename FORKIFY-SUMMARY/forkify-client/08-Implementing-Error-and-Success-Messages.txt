
KEY NOTES: 

        - "Real World Error Handling": Display error messages  on the UI - instead of logging

        -Implement false ID (recipe does not exists on the server)
        
        - AT THE MOMENT I HAVE 2 PROBLEMS WITH THE ERROR HANDLING: 

                1.I handle the error in the Model!by logging it to console! I  should be handled in the view(render the error as handling!)
                2.The error message is not relevant for the user! 
                         *Model: ERROR*: $Error: Invalid _id: 5ed6604591c37cdc054bcd0. (400: Error


        - IMPORTANT: WHERE TO DECLARE THE ERROR MESSAGE: 'We could not find your recipe. Please try another one!''We could not find your recipe. Please try another one!' 
                In the controller(and then call the view by passing the message to rednerError)
                OR IN THE view  ?

                IN THE VIEW MAKES MORE SENSE - SINCE UI LOGIC - THE MESSAGE IS ON THE PAGE(and keep controller small)

        - CHECK  WHAT IS THE MESSAGE SHOULD BE RENDERED - AND WHERE IT SHOULD BE DECLARED 
                - THE MESSAGE IS NOT THE ONE RETURNS FROM THE MODEL (FROM THE API)
                        Error: Invalid _id: 5ed6604591c37cdc054bcd0. (400) * * * *
                INSTEAD: 
                        'We could not find your recipe. Please try another one!'
                        
        - CHECK FOR INVALID ID ALSO(!CHECK IF THERE IS A DIFFERNT WHEN INVALID ID OR NOT FOUND RECIPE FOR VALID ID IN THE API!)

        - IMPLEMENT rendering general message 
        

TASK LIST:

        1.View: Create the renderError(message) method
          Refactor : Move the Error Handling View for invalid id - from the model that logging error message 
          to the correct place - to the view to RENDER error message 


