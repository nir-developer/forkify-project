 
LECTURE 300  - PAGINATION PART 2 - RENDERING THE PAGINATION

   
      REQUIREMENTS:
        
        When the  User clicks on the pagination buttons then : 
        The app should render the Pagination View With correct buttons
        and with correct page numbers on them 
        According to the 4 different cases: 


                Case 1: Page 1 is requested and there are more pages :
                       
                       =>  Render: No button is rendered! 

                Case 2: requested page is greater than  1 is requested and the requested page is not the last 

                       => Both 2 buttons are rendered 
              

                Case 3: Requested page is the last page (and there are more than one pages)
                       
                        => Render Only Left button: Prev 
                
                Case 4: Page 1 is requested and there are no other pages : 

                        => Render only Next page (right button) 


        KEY NOTES: 
        
           1. The PaginationVIew and SearchView: 
                 -Are subscribed on init - like all other
                 -Are rendered on the same time!
                 -Are not listening to the  But on the search form submit event 
                 -Their render functions are called by their handler
              
              The PaginationView and the SearchView are rendered together -  'INTERTWINED':
              They have different
              

           2.Rendering the Buttons with correct page number on them - THE 4 CASES!!! IMPORTANT (EXTRACT LATER TO generateButtonsMarkup)

           3. 



        Response to the buttons click events 
           
           3.CREATE CONNECTION BETWEEN THE DOM(BUTTONS) AND THE JS CODE BY USING DATA ATTRIBUTE: data-goto="${currentPage +-1}
              FOR STORING THE CORRECT NEXT AND PREV PAGES ON THE BUTTONS HTML DATA ATTRIBUTES ON THE BUTTONS :
              IMPORTANT - I MUST USE DATA ATTRIBUTES IN ORDER TO KNOW WHERE TO NAVIGATE WHEN BUTTONS ARE CLICKED! 
               

                EVENT DELEGATION ON THE BUTTONS:
                  Review: 
                     step 1: Attach event listen on their closes common parent 
                     Step 2: Matching strategy :
                         Handle the click event  based on the class  of the event.target.classList.has()
                         
                   
                 Notes :Listen to the click event on the buttons -and Use event delegation 
                 (since I dont want to listen to each one of them indvidually) 

     IMPORTANT: //EVENT DELEGATION! 
      //Step 1: attach the handler on the closet common parent of the buttons 
      //Step 2: Matching strategy: select the target element that triggered the event and handle it
      //NOTE - I CAN NOT CALL IMMITALLY TO THE HANDLER - 
      //BY PASSING TO THE addEventListener - since I need to know the actual button based on the event.target 


     IMPORTANT  ESTABLISH CONNECTION BETWEEN HTML(DOM) AND JS CODE
       //SELECT THE CLOSET PARENT TO THE EVENT TARGET(SINCE IF THE SPAN OR ICON(BUTTON'S CHILDREN) IS CLICKED BU I WANT THE EVENT TO BUBBLE UP UNTIL THE BUTTON PARENT)
        //SUPER IMPORTANT - WHY I SELECT THE BUTTON?? 
        //SINCE I NEED A WAY OF KNOWING THE PAGE NUMBER NUMBER TO GO WHEN CLICKING THE BUTTON! 
        //BY ESTABLISHING A CONNECTION BETWEEN DOM(HTML) AND  JS CODE ! 
        //USING THE DATA SET ATTRIBUTE - I CAN STORE THE PAGE VALUE TO GO NEXT! 
        //ONLY THE CAN HAVE THIS VALUE! 
        //IMPORTANT - WHEN READING USER DATA FROM AN INPUT ELEMENT - IS DIFFERENT - THE DATA COMES DIRECTLRY FROM THE USER 
        //HERE THE DATA IS NOT AN INPUT DATA COMMING FROM THE USER AS AN INPUT 
        //! I NEED SOMEHOW TO STORE IT 
        

        IMPORTANT: 
        //GOURD CLAUSE ! FOR THE CASE THERE IS NO BUTTON(LIKE THE 4TH CASE BELOW : FIRST PAGE AND NO MORE PAGES 
        //OTHERWISE - NULL POINT EXCEPTION



        IMPORTANT: 
            I need to return the toToPage to the controlPagination - to render the requested page  


************************************************************************
        Task List : PaginationView
****************************************************
           1.Create the _generateMarkup():String -  of the PaginationView 
                to return correct buttons with correct value to be rendered 
                (The 4 cases for how to generate the markup of the buttons !)



           2.Create the addHandlerClick(handler):void function of the PaginationVIew :
             

           
















