

TASK LIST: 


    1.Feature 1: Load Recipe - Implement the public end point: GET:  https://forkify-api.herokuapp.com/api/v2/recipes/664c8f193e7aa067e94e880c

                    IMPORTANT - RETURN THE RESPONSE AS JONAS : 

                    1.1 Replace the _id field of the Recipe in the response by id -DONE

                    1.2  The _v should not be included   - DONE : 

                    1.3 THE id of the ingredients SHOULD not included - DONE 






    2.Implement the public end point: GET  http://localhost:3000/api/v2/recipes?search=pizza
            REQUIREMENT: 
            
**************************************************************************
        1.  Feature 1: Load Recipe 
            Implement the public end point: GET:  https://forkify-api.herokuapp.com/api/v2/recipes/664c8f193e7aa067e94e880c
*********************************************************************

1.1 Update the Schema to return same result set as jonas: DONE

1.2 Implement 404 for a non existing   but a valid id  - DONE 

1.3 Implement  200 - for an existing id - DONE(with the  response requirements in 1!!!)

1.4 Implement 400 for invalid mongodb id - LATER!! OK(later with error handling )
    (FOR NOW 
     {
    "status": 500,
    "message": "Cast to ObjectId failed for value \"22\" (type string) at path \"_id\" for model \"recipe\""
})


----------------------------------------------------------------
1.1 Update the Schema to return same result set as jonas: 
-----------------------------------------------------------------

     - Replace the _id field of the Recipe in the response by id -DONE
     - Remove THE  _v should not be included   - DONE : 
     - Remove the _id from the ingredients SHOULD not included - DONE 


    IMPLEMENTATION: 

1.Update the Recipe Schema 

     { toJSON: { virtuals: true }, toObject: { virtuals: true } }

 2.Add a schema option and a setter method with transform:
          
            recipeSchema.set("toJSON", {
            transform: (doc, ret, options) => {
                ret.id = ret._id; // Replace _id with id
                delete ret._id; // Remove _id field from the response
                delete ret.__v; // Optionally remove __v field if not needed
                return ret;
            },
            });

3.Do the same for the ingredient Schema (create it!! and embed it)

     { toJSON: { virtuals: true }, toObject: { virtuals: true } }
 
        ingredientSchema.set("toJSON", {
        transform: (doc, ret, options) => {
            delete ret._id; // Remove _id field from the response
            delete ret.__v; // Optionally remove __v field if not needed
            return ret;
        },
        });






  1.2  The _v should not be included   - DONE : 

  1.3 THE id of the ingredients SHOULD not included

------------------------------------------------------
  1.2  The _v should not be included   DONE : 
------------------------------------------------------

        


                recipeSchema.set('toJSON', {
                transform: (doc, ret, options) => {
                    delete ret.__v;
                    return ret;
                }
                });



    
  
  - The _id should be changed to id -> 
    -----------------------------------------------------------------------
            https://forkify-api.herokuapp.com/api/v2/recipes?search=""
    -------------------------------------------------------------------
   
            
            Status Code:  200 
                {
                    "status": "success",
                    "results": 0,
                    "data": {
                        "recipes": []
                    }
                }

    --------------------------------------------------------------
            https://forkify-api.herokuapp.com/api/v2/recipes?search="Pizza    "
    --------------------------------------------------------------------------

        
            Status Code:  200 
                {
                    "status": "success",
                    "results": 0,
                    "data": {
                        "recipes": []
                    }
                }

-------------------------------------------------------------------------
            https://forkify-api.herokuapp.com/api/v2/recipes?search="Pizza"
---------------------------------------------------------------------


    Status Code: 200 
    {
    "status": "success",
    "results": 59,
    "data": {
        "recipes": [
            {
                "publisher": "Closet Cooking",
                "image_url": "http://forkify-api.herokuapp.com/images/BBQChickenPizzawithCauliflowerCrust5004699695624ce.jpg",
                "title": "Cauliflower Pizza Crust (with BBQ Chicken Pizza)",
                "id": "664c8f193e7aa067e94e8706"
            },
            {
                "publisher": "Closet Cooking",
                "image_url": "http://forkify-api.herokuapp.com/images/BBQChickenPizzawithCauliflowerCrust5004699695624ce.jpg",
                "title": "Cauliflower Pizza Crust (with BBQ Chicken Pizza)",
                "id": "664c8f193e7aa067e94e8610"
            },
        ...

        ]
    }
    }


    ---------------------------------------------------------------------------
                https://forkify-api.herokuapp.com/api/v2/recipes?search="Homemade Pizza"
    --------------------------------------------------------------------------


    Status Code: 200 

    {
    "status": "success",
    "results": 1,
    "data": {
        "recipes": [
            {
                "publisher": "Simply Recipes",
                "image_url": "http://forkify-api.herokuapp.com/images/pizza292x2007a259a79.jpg",
                "title": "Homemade Pizza",
                "id": "664c8f193e7aa067e94e8531"
            }
        ]
    }
}
************************************************************************
            1. Implement the public end point: GET:  https://forkify-api.herokuapp.com/api/v2/recipes/664c8f193e7aa067e94e880c
******************************************************

**************************************************************
                2.Implement the public end point: GET  http://localhost:3000/api/v2/recipes?search=pizza
********************************************************

    REQUEST : GET   https://forkify-api.herokuapp.com/api/v2/recipes?search=pizza

  RESPONSE: OK 

{
  "status": "success",
  "results": 59,
  "data": {
    "recipes": [
      {
        "publisher": "Closet Cooking",
        "image_url": "http://forkify-api.herokuapp.com/images/BBQChickenPizzawithCauliflowerCrust5004699695624ce.jpg",
        "title": "Cauliflower Pizza Crust (with BBQ Chicken Pizza)",
        "id": "5ed6604591c37cdc054bcd09"
      },
      {
        "publisher": "Closet Cooking",
        "image_url": "http://forkify-api.herokuapp.com/images/BBQChickenPizzawithCauliflowerCrust5004699695624ce.jpg",
        "title": "Cauliflower Pizza Crust (with BBQ Chicken Pizza)",
        "id": "5ed6604591c37cdc054bcc13"
      },
 
